apply plugin: 'com.android.application'

def sample = "GameEngine"
android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
    }

    buildTypes {
        debug {
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_TOOLCHAIN=clang",
                            "-DANDROID_STL=c++_static",
                            "-DANDROID_ARM_MODE=arm",
                            "-DANDROID_NATIVE_API_LEVEL=23",
                            "-DANDROID_CPP_FEATURES=exceptions",
                            "-DCMAKE_BUILD_TYPE=Debug"

                    targets "${sample}".toString()
                }
            }
            jniDebuggable true
        }
        release {
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_TOOLCHAIN=clang",
                            "-DANDROID_STL=c++_static",
                            "-DANDROID_ARM_MODE=arm",
                            "-DANDROID_NATIVE_API_LEVEL=23",
                            "-DANDROID_CPP_FEATURES=exceptions",
                            "-DCMAKE_BUILD_TYPE=RelWithDebInfo"

                    targets "${sample}".toString()
                }
            }
            signingConfig signingConfigs.debug
            jniDebuggable true
        }
    }
    sourceSets {
        main {
            manifest.srcFile '../../Eclipse/AndroidManifest.xml'
            resources.srcDirs = ['../../Eclipse/src']
            res.srcDirs = ['../../Eclipse/res']
            assets.srcDirs = ['../../src/assets']
            java.srcDirs = ['../../Eclipse/src']
        }

    }

    externalNativeBuild {
        cmake {
            path "./CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:28.0.0'
}
